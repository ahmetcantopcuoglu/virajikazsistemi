#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <OLED_I2C.h>

OLED  myOLED(SDA, SCL, 8);
int i = 1;
char viraj;
Adafruit_SSD1306 display(-1);

const unsigned char saga [] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xfc, 0x0f, 0xe0, 0x7f, 0xe0, 0x7e, 0x07, 0xf0, 0x3f,
  0xf0, 0x3f, 0x03, 0xf8, 0x1f, 0xf8, 0x1f, 0x81, 0xfc, 0x1f, 0xfc, 0x0f, 0xc0, 0xfe, 0x0f, 0xfe,
  0x07, 0xe0, 0x7f, 0x07, 0xff, 0x03, 0xf0, 0x3f, 0x03, 0xfe, 0x07, 0xe0, 0x7e, 0x07, 0xfc, 0x0f,
  0xc0, 0xfc, 0x0f, 0xf8, 0x1f, 0x81, 0xf8, 0x1f, 0xf0, 0x3f, 0x03, 0xf0, 0x3f, 0xe0, 0x7e, 0x07,
  0xe0, 0x7f, 0xc0, 0xfc, 0x0f, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};
// '138', 40x40px
const unsigned char sola [] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x07, 0xf0, 0x3f, 0x03, 0xfc, 0x0f, 0xe0, 0x7e, 0x07,
  0xf8, 0x1f, 0xc0, 0xfc, 0x0f, 0xf0, 0x3f, 0x81, 0xf8, 0x1f, 0xf0, 0x7f, 0x03, 0xf0, 0x3f, 0xe0,
  0xfe, 0x07, 0xe0, 0x7f, 0xc0, 0xfc, 0x0f, 0xc0, 0xff, 0xe0, 0x7e, 0x07, 0xe0, 0x7f, 0xf0, 0x3f,
  0x03, 0xf0, 0x3f, 0xf8, 0x1f, 0x81, 0xf8, 0x1f, 0xfc, 0x0f, 0xc0, 0xfc, 0x0f, 0xfe, 0x07, 0xe0,
  0x7e, 0x07, 0xff, 0x03, 0xf0, 0x3f, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};
// '135', 40x40px
const unsigned char sag [] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x1f, 0xff, 0xff, 0xff, 0x80, 0x0f,
  0xff, 0xff, 0xff, 0xc0, 0x07, 0xff, 0xff, 0xff, 0xe0, 0x03, 0xff, 0xff, 0xff, 0xf0, 0x01, 0xff,
  0xff, 0xff, 0xf8, 0x00, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00, 0x3f, 0xff,
  0xff, 0xfe, 0x00, 0x1f, 0xff, 0xff, 0xff, 0x00, 0x1f, 0xff, 0xff, 0xff, 0x80, 0x0f, 0xff, 0xff,
  0xff, 0xc0, 0x07, 0xff, 0xff, 0xff, 0xe0, 0x03, 0xff, 0xff, 0xff, 0xc0, 0x07, 0xff, 0xff, 0xff,
  0x80, 0x0f, 0xff, 0xff, 0xff, 0x00, 0x1f, 0xff, 0xff, 0xfe, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00,
  0x7f, 0xff, 0xff, 0xfc, 0x00, 0xff, 0xff, 0xff, 0xf8, 0x01, 0xff, 0xff, 0xff, 0xf0, 0x01, 0xff,
  0xff, 0xff, 0xe0, 0x03, 0xff, 0xff, 0xff, 0xc0, 0x07, 0xff, 0xff, 0xff, 0x80, 0x0f, 0xff, 0xff,
  0xff, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};
// '136', 40x40px
const unsigned char sol [] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0xff, 0xff, 0xff, 0xf0,
  0x01, 0xff, 0xff, 0xff, 0xe0, 0x03, 0xff, 0xff, 0xff, 0xc0, 0x07, 0xff, 0xff, 0xff, 0x80, 0x0f,
  0xff, 0xff, 0xff, 0x00, 0x1f, 0xff, 0xff, 0xfe, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00, 0x3f, 0xff,
  0xff, 0xf8, 0x00, 0x7f, 0xff, 0xff, 0xf8, 0x00, 0xff, 0xff, 0xff, 0xf0, 0x01, 0xff, 0xff, 0xff,
  0xe0, 0x03, 0xff, 0xff, 0xff, 0xc0, 0x07, 0xff, 0xff, 0xff, 0xe0, 0x03, 0xff, 0xff, 0xff, 0xf0,
  0x01, 0xff, 0xff, 0xff, 0xf8, 0x00, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00,
  0x3f, 0xff, 0xff, 0xff, 0x00, 0x3f, 0xff, 0xff, 0xff, 0x80, 0x1f, 0xff, 0xff, 0xff, 0xc0, 0x0f,
  0xff, 0xff, 0xff, 0xc0, 0x07, 0xff, 0xff, 0xff, 0xe0, 0x03, 0xff, 0xff, 0xff, 0xf0, 0x01, 0xff,
  0xff, 0xff, 0xf8, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};
//100x50px
const unsigned char araba [] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff,
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xfc, 0x00, 0x60, 0x30, 0x00, 0x00, 0x00,
  0x01, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff,
  0xf0, 0xff, 0xff, 0xf0, 0x00, 0x80, 0x40, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xf0, 0xff, 0xff,
  0xe0, 0x01, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xf0, 0xff, 0xff, 0xc0, 0x02, 0x01,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xf0, 0xff, 0xff, 0x80, 0x04, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x1f, 0xff, 0xf0, 0xff, 0xff, 0x00, 0x08, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0xff, 0xf0, 0xff, 0xfe, 0x00, 0x10, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xf0, 0xff,
  0xfc, 0x00, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xf0, 0xf8, 0x1c, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc1, 0xf0, 0xf0, 0x00, 0x00, 0x40, 0x20, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0xe0, 0x00, 0x00, 0x80, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x70, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0xff, 0x80, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xf0, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x07, 0xf0, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
  0xf0, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xf0, 0xf8, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xe0, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0xc0, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x0f, 0x00, 0x30, 0x80, 0x0f, 0xb8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xdf,
  0x00, 0x10, 0x80, 0x0f, 0x93, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x9f, 0x00, 0x10, 0x80,
  0x00, 0x51, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0xa0, 0x00, 0x10, 0x80, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x10, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10,
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x80, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x10, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x10, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x80, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x80, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x80, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff,
  0x80, 0x00, 0x00, 0x00, 0x10, 0x80, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00,
  0x00, 0x10, 0x80, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x10, 0x80,
  0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x10, 0x80, 0x00, 0x00, 0x00,
  0x03, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x10, 0x80, 0x0f, 0xf0, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x0e, 0x00, 0x10, 0x80, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0x00, 0x30, 0x80, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x30,
  0x80, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x30, 0xe0, 0x1f, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x70
};
void setup()
{
  display.begin(SSD1306_SWITCHCAPVCC, 0x3C);
  Wire.begin();

  // Tampon Bellek sıfırlama
  display.clearDisplay();





  pinMode(8, OUTPUT);
  pinMode(9, OUTPUT);
  pinMode(10, OUTPUT);
  pinMode(12, OUTPUT);
  Serial.begin(9600);
}
void loop()
{

  digitalWrite(8, HIGH);
  digitalWrite(9, HIGH);
  digitalWrite(10, HIGH);




  if (Serial.available() > 0)
  {
    viraj = Serial.read();
    Serial.print(viraj);


    if (viraj == '1') {
      digitalWrite(8, LOW);
      digitalWrite(9, HIGH);
      digitalWrite(10, HIGH);
      {
        digitalWrite(12, HIGH);
        delay(300);
        digitalWrite(12, LOW);
      }


      display.setTextSize(1, 4);
      display.setTextColor(WHITE);
      display.setCursor(10, 0);
      display.println("saga keskin viraj");
      display.drawBitmap(40, 30, saga, 40, 40, BLACK, WHITE);
      display.display();
      delay(1000);
      display.clearDisplay();
    }
    if (viraj == '2') {
      digitalWrite(8, HIGH);
      digitalWrite(9, LOW);
      digitalWrite(10, HIGH);
       digitalWrite(12, HIGH);
        delay(300);
        digitalWrite(12, LOW);
      display.setTextSize(1, 4);
      display.setTextColor(WHITE);
      display.setCursor(10, 0);
      display.println("sola keskin viraj");
      display.drawBitmap(40, 30, sola, 40, 40, BLACK, WHITE);

      display.display();
      delay(1000);
      display.clearDisplay();
    }
    if (viraj == '3') {
      digitalWrite(8, HIGH);
      digitalWrite(9, LOW);
      digitalWrite(10, LOW);
       digitalWrite(12, HIGH);
        delay(300);
        digitalWrite(12, LOW);

      display.setTextSize(2);
      display.setTextColor(WHITE);
      display.setCursor(5, 0);
      display.println("saga viraj");
      display.setTextSize(2);
      display.drawBitmap(40, 30, sag, 40, 40, BLACK, WHITE);

      display.display();
      delay(1000);
      display.clearDisplay();
    }
    if (viraj == '4') {
      digitalWrite(8, LOW);
      digitalWrite(9, HIGH);
      digitalWrite(10, LOW);
       digitalWrite(12, HIGH);
        delay(300);
        digitalWrite(12, LOW);
      display.setTextSize(2);
      display.setTextColor(WHITE);
      display.setCursor(5, 0);
      display.println("sola viraj");
      display.setTextSize(2);
      display.drawBitmap(40, 30, sol, 40, 40, BLACK, WHITE);

      display.display();
      delay(1000);
      display.clearDisplay();
    }
    else (viraj == '0');
    {
      digitalWrite(8, HIGH);
      digitalWrite(9, HIGH);
      digitalWrite(10, HIGH);

    }
  }
  display.drawBitmap(15, -5, araba, 100, 50, WHITE);
  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(22, 48);
  display.println("Viraj Tabelasi");
  display.setCursor(25, 56);
  display.println("Ikaz Sistemi");
  display.display();
  delay(1000);
  display.clearDisplay();
}
